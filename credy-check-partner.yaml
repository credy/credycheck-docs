openapi: 3.0.0
info:
  title: CredyCheck Partner API Documentation
  description: |

    This document describes methods that you must implement as CredyCheck partner.

    All requests that come to your api expect a callback back to credycheck (within 5 seconds).

    To see callback definitions, please check "Callbacks" tab inside the API method spec.

    The implementing partner must give us base url where their api will reside.

    # Glossary
     * Requester - a partner who sends any kind of data query to us
     * Responder - a partner from whom we query any kind of data
     * Envelope - encrypted container for personal ID
     * Us - CredyCheck API

    # Workflow
    ![](https://github.com/credy/credycheck-docs/raw/master/round_1.png)
    ![](https://github.com/credy/credycheck-docs/raw/master/round_2.png)

    # Authentication
    You can choose which auth method you want to use.

    We support the following methods:

     * OAuth 2.0 using Client Credentials grant type (token url, client ID and client secret must be provided to us)
     * Basic auth (username and password must be provided to us)
     * Token auth (token and query param where we should send this token in must be provided to us)

    # Envelope

    Envelope is JWE token.

    Specs:
    * alg: RSA-OAEP-256
    * enc: A256CBC-HS512

  version: 3.0.0
security:
  - oAuth2: []
paths:
  /v1/get-session-key:
    post:
      description: 'Here you must generate a JWK with alg = RSA-OAEP-256. When the key is generated, we expect a callback from you (see "session_key_created" in Callbacks tab). The url path does not specifically have to be /v1/get-session-key, you can specify your own.'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                callback_uri:
                  type: string
                  example: 'http://api.credycheck.com/v1/recieve_key/<responder session UUID-4>'
                  description: When you have successfully generated keys, you can send public key (JWK) to this url.
      responses:
        '202':
          description: ''
      callbacks:
        session_key_created:
          '{$request.body#/callback_uri}':
            post:
              description: ''
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SessionKey'
              responses:
                '202':
                  description: ''
  '{customer_data_callback_uri}':
    post:
      description: 'A method that takes in an envelope and responds with info about the customer.'
      requestBody:
        content:
          application/json:
            schema:
              required:
                - envelope
                - callback_uri
              properties:
                envelope:
                  type: string
                  example: eyJhbGciOiJSU0EtT0FFUC0yNTYiLCJlbmMiOiJBMjU2Q0JDLUhTNTEyIiwiemlwIjoiREVGIn0.zaAWoRog2iR4oG24leaqFypwQmMV9TS1AqHNWYLgFm-Wf_gViB0Hyu6w2N3tRIrjzn98cvdqFMJCpqS8MWpSNdLKvMLDlVAVCdRwFwK-H-kEP3iRLMVfG6eHk8EHSKlDHevYzHNajecSvg4wYW5Wcm7nv_mn1CqHh7_7jsxnLmUKOV-lUhH3vtUGbyhnsJY3rZEsa2VIppVd2LFVcqZzuH6c_r0vsf1Yn_46YC286D6eboEaToUdnH8T2EMsBMzpFq7NQ1wfr-_LG-r8v989l5ZbXv_ASg0bKoPvn2PF-5o9g0q-XzJ7G3qCICsZH55nBxI2EO9w6J7YxKfPUmiiRnVDB6Tuz9ZqHS2cN8rrGQDXaOjpF6J4Sh78rRTdCZ5zHUAvr8IHwmgujwsBq8aQe17m1_b0qdTO3oAs-ssIjwhk-JXAnInkD92CqmX9CiB44MAFJwAznEaB1kSUY5ZNSlhIB_xqykAi9pxBPTWGvo-Jt-l4liapbQfZpEcMpcPN-2DQ_mBZ3aK9l3aXr_SAeFPv3SwS1vuvZT_92USGg98zJ6lu0UUN9jT7MoKqDquofzWsvC4rK3HKsKrSWUU5jJh5Dq6IiDQSMXzDXKRjKHUYkn7dvuO88Q_FvcoENPJLJXrIJlHrY_26tTx-BTwSgMDBbpymn_OyLOJPYRn3moQ.yCmnuyLQzNl91LP9iLmNGA.sGtQ2h7r0Pe79ri3CRHd_QIb_U7DjFlH5dBHgWzzcfA.CtB47h2A-LEHWYOLrpmIplcK-wbkSaMdiAn17s0gh-c
                  description: This is a JWE token with personal ID as its contents.
                callback_uri:
                  type: string
                  example: 'http://api.credycheck.com/v1/my_callback'
      responses:
        '202':
          description: ''
      callbacks:
        data_ready:
          '{$request.body#/callback_uri}':
            delete:
              description: When there's no data for the customer
              responses:
                '200':
                  description: ''
            post:
              description: |
                When there's no data for a specific field, null or 0 should be specified as a value (based on field spec).

              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CustomerData'
              responses:
                '202':
                  description: ''
components:
  schemas:
    SessionKey:
      type: object
      required:
        - key
      properties:
        customer_data_callback_uri:
          type: string
          example: http://example.com/v1/{session_uuid}/get-customer-data
          description: Here you can define the url where you want us to send the request for customer data
        key:
          type: string
          example: {"alg":"RSA-OAEP-256","use":"enc","kty":"RSA","n":"rE9vvexB6nzn8uVFSUj70-_XhCtNmrXdb0uX4pPRpCggIvAdjBTedCR-LiODyjizRDjo-KKPPtCj3FnUiEfL5zMWrg_wThxoBhJl-PsnhY6yGMtnM2wUX_Tznu_mKYJ_pm_hKxkVKq_4tWn_79bQFI0K1sA6YzB7RwvO08Vp1N2kBLKQvuuoJGFXUoDT7qe9A4RwOI4MrcNPFPS_C_nEaeHMM4D6H4Z0y6qAF8acTO3dLfSE4GVuuqWagJFOqnKHZbCDv_qqXSm4QyAzoz8mNyFcsXLy1wRHH8bD6Btzu6F0zylDQIWWoLkjiNJvEcrQ_Cw8Tc98Tmx036Hwn-xmb5mPfDRuYtyg0ltNDaC7xiyk3QkQglFn5CSq5zRwyoLZ-6RAiXDgrlvPOp-OSM8SX0XZ37Hthj-E7wms4I1WX3FydtW6GszWroiy5wUXWf6ZwHyeh9iL-z1b38R7FvSfeE0P8ROrODbugOxGYHTsyXs8vBuaQ8REFPGRqMxiFNHSXmtepHqRPAF9djP1gQIMQzS8Zp6udoVEshlV2iwYlzwPd5qJ9x_jGj9AGiGaBYhoLB1LYfE91IELl8ay32MC3lPk1PVK1kqQb0sUQ-dRWq9fNf4OuIQj7VBkIPzKdhfQwVxF7j2icc2hHUTq0BWrCDOaolZ320oHvKwvjZKEgy8","e":"AQAB"}
          description: session public key in JWK notation
    CustomerData:
      type: object
      properties:
        gdpr_consent:
          type: boolean
          example: true
          description: Assurance that GDPR consent to share data has been asked from customer, value should be TRUE. If it hasn't, field value should be FALSE and data will not be processed and passed to requesting party.
        applications_count_30days:
          type: integer
          format: int32
          example: 2
          description: How many loan applications customer has made in the last 30 days. Must include only full completed/submitted loan applications (not partial/incomplete). If product is credit line, only new loan applications/contracts must be included, not applications within already approved/active credit line.
        applications_count_5days:
          type: integer
          format: int32
          example: 1
          description: How many loan applications customer has made in the last 5 days. Must include only full completed/submitted loan applications (not partial/incomplete). If product is credit line, only new loan applications/contracts must be included, not applications within already approved/active credit line.
        last_submitted_application_date:
          type: string
          example: "2020-02-01"
          description: What was the last loan application date when customer completed/submitted loan application.
        count_of_active_loans:
          type: integer
          format: int32
          example: 1
          description: How many active loans customer has.
        count_of_loans_overdue_5_plus:
          type: integer
          format: int32
          example: 0
          description: How many 5+ days overdue loans customer has. Only the ones which principal debt is 8+ â‚¬ (NOT including interest and other fees) must be included.
  securitySchemes:
    oAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: '/v1/token'
          scopes: {}

