openapi: 3.0.0
info:
  title: CredyCheck Partner API Documentation
  description: |
  
    This document describes methods that you must implement as CredyCheck partner. 
    
    All requests that come to your api expect a callback back to credycheck (within 5 seconds).
    
    To see callback definitions, please check "Callbacks" tab inside the API method spec.
    
    The implementing partner must give us base url where their api will reside.
  
    # Glossary 
     * Requester - a partner who sends any kind of data query to us 
     * Responder - a partner from whom we query any kind of data 
     * Envelope - encrypted container for personal ID 
     * Us - CredyCheck API 
    
    # Workflow
    ![](https://github.com/credy/credycheck-docs/raw/master/round_1.png)
    ![](https://github.com/credy/credycheck-docs/raw/master/round_2.png)
    
    # Authentication
    You can choose which auth method you want to use.
    
    We support the following methods:
    
     * OAuth 2.0 using Client Credentials grant type (token url, client ID and client secret must be provided to us)
     * Basic auth (username and password must be provided to us)
     * Token auth (token and query param where we should send this token in must be provided to us)

  version: 3.0.0
security: 
  - oAuth2: []
paths:
  /v1/get-session-key:
    post:
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              properties:
                session_uuid:
                  type: string
                  example: b3345507-8298-4bd1-843a-6a968e593f00
                callback_uri:
                  type: string
                  example: 'http://api.credycheck.com/v1/recieve_key/<responder session UUID-4>'
      responses:
        '202':
          description: ''
      callbacks:
        session_key_created:
          '{$request.body#/callback_uri}':
            post:
              description: ''
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SessionKey' 
              responses:
                '202':
                  description: ''
  '/v1/{session_uuid}/get-customer-data':
    post:
      description: ''
      parameters:
        - name: session_uuid
          in: path
          description: ''
          required: true
          schema:
            format: string
            example: b3345507-8298-4bd1-843a-6a968e593f00
      requestBody:
        content:
          application/json:
            schema:
              required: 
                - envelope
                - callback_uri
              properties:
                envelope:
                  type: string
                  example: "encoded personal ID"
                callback_uri:
                  type: string
                  example: 'http://example.com/my_callback'
      responses:
        '202':
          description: '' 
      callbacks:
        data_ready:
          '{$request.body#/callback_uri}':
            delete:
              description: When there's no data for the customer
              responses:
                '200':
                  description: ''
            post:
              description: |
                When there's no data for a specific field, null or 0 should be specified as a value (based on field).
                
                When gdpr_consent is false, don't include any data.
                
                Active loans is counted when the loan is at least 8+ eur (not counting interest)

                Loan application count must include the number of full applications submitted (that means not to include the ones that are incomplete)

              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/CustomerData'
              responses:
                '202':
                  description: ''           
components:
  schemas:
    SessionKey:
      type: object
      required: 
        - key
      properties:
        key:
          type: string
          example: key_binary_data_goes_here
          description: session public key
    CustomerData:
      type: object
      properties:
        gdpr_consent:
          type: boolean
          example: true
        applications_count_30days: 
          type: integer
          format: int32
          example: 2
          description: only full completed applications (not incomplete)
        applications_count_5days: 
          type: integer
          format: int32
          example: 1
          description: only full completed applications (not incomplete)
        last_submitted_application_date: 
          type: string
          example: "2020-02-01"
        count_of_active_loans: 
          type: integer
          format: int32
          example: 1
          description: only the ones which debt is 8+ € (not including interest) must be included
        count_of_loans_overdue_5_plus: 
          type: integer
          format: int32
          example: 0
          description: only the ones which debt is 8+ € (not including interest) must be included
  securitySchemes:
    oAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: '/v1/token'
          scopes: {}
          
